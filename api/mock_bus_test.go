// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/globusdigital/feature-toggles/messaging (interfaces: Bus)

// Package api is a generated GoMock package.
package api

import (
	context "context"
	messaging "github.com/globusdigital/feature-toggles/messaging"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockBus is a mock of Bus interface
type MockBus struct {
	ctrl     *gomock.Controller
	recorder *MockBusMockRecorder
}

// MockBusMockRecorder is the mock recorder for MockBus
type MockBusMockRecorder struct {
	mock *MockBus
}

// NewMockBus creates a new mock instance
func NewMockBus(ctrl *gomock.Controller) *MockBus {
	mock := &MockBus{ctrl: ctrl}
	mock.recorder = &MockBusMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockBus) EXPECT() *MockBusMockRecorder {
	return m.recorder
}

// Send mocks base method
func (m *MockBus) Send(arg0 context.Context, arg1 messaging.Event) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Send", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// Send indicates an expected call of Send
func (mr *MockBusMockRecorder) Send(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Send", reflect.TypeOf((*MockBus)(nil).Send), arg0, arg1)
}
